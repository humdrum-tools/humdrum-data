#!/usr/bin/env perl
#
# Programmer:    Craig Stuart Sapp <craig.stanford.edu>
# Creation Date: Tue Feb 20 02:48:16 PST 2024
# Last Modified: Tue Feb 20 02:48:19 PST 2024
# Filename:      processList
# Syntax:        perl 5
# vim:           ts=3:nowrap
#
# Description:   Read a list file to download files from various repositories.
#
# Example input:
#       **ghname	**ghrepo		**from	**to
#       craigsapp	beethoven-piano-sonatas	kern	beethoven/piano/sonatas
#       craigsapp	mozart-piano-sonatas	kern	mozart/piano/sonatas
#       *-		*-			*-	*-
# Also:
#    **filter  == Only process files that match regular expression.
#    **Xfilter == Exclude files that match regular expression.
#    **prefix  == text to prefix to filenames.
#    **sar     == Regular expression search and replace for filename.
#    **suffix  == text to append to filenames.
#

use strict;

# Ignore non-lists in case they get here via the Makefile:
return "" if $ARGV[0] =~ /LIST-note-counts.tsv/;
return "" if $ARGV[0] =~ /LIST-notecounts.tsv/;
return "" if $ARGV[0] =~ /LIST-note-count.tsv/;
return "" if $ARGV[0] =~ /LIST-notecount.tsv/;
return "" if $ARGV[0] =~ /LIST-nc.tsv/;
return "" if $ARGV[0] =~ /LIST-ncs.tsv/;
return "" if $ARGV[0] =~ /LIST-readme.tsv/;
return "" if $ARGV[0] =~ /LIST-clear.tsv/;
return "" if $ARGV[0] =~ /LIST-all.tsv/;

my @contents = <>;
chomp @contents;

my %header;

foreach my $line (@contents) {
	next if $line =~ /^\s*$/;
	next if $line =~ /^!/;
	$line =~ s/\s+$//;
	if ($line =~ /^\*\*/) {
		my @fields = split(/ *\t+ */, $line);
		%header = {};
		for (my $i=0; $i<@fields; $i++) {
			my $field = $fields[$i];
			$field =~ s/^\*\*//;
			$header{$field} = $i;
			#warn "HEADER $header{$field} == $field\n";
		}
	}
	next if $line =~ /^\*/;

	my @parameters = split(/ *\t+ */, $line);
	for (my $i=0; $i<@parameters; $i++) {
		#warn "\t$i == $parameters[$i]\n";
	}

	my $ghname   = ""; # username for the repository
	my $ghrepo   = ""; # name of the repository
	my $from     = ""; # directory in the repository to copy from
	my $to       = ""; # directory in this repository to copy to
	my $sar      = ""; # filename renaming sar
	my $prefix   = ""; # prefix stirng to add to filename
	my $suffix   = ""; # suffix string to add to filename
	my $filter   = ""; # filter to select filenames
	my $xfilter  = ""; # xfilter to deselect filenames

	my $ghname   = $parameters[$header{"ghname"}]  if $header{"ghname"}  !~ /^\s*$/;
	my $ghrepo   = $parameters[$header{"ghrepo"}]  if $header{"ghrepo"}  !~ /^\s*$/;
	my $from     = $parameters[$header{"from"}]    if $header{"from"}    !~ /^\s*$/;
	my $to       = $parameters[$header{"to"}]      if $header{"to"}      !~ /^\s*$/;
	my $sar      = $parameters[$header{"sar"}]     if $header{"sar"}     !~ /^\s*$/;
	my $prefix   = $parameters[$header{"prefix"}]  if $header{"prefix"}  !~ /^\s*$/;
	my $suffix   = $parameters[$header{"suffix"}]  if $header{"suffix"}  !~ /^\s*$/;
	my $filter   = $parameters[$header{"filter"}]  if $header{"filter"}  !~ /^\s*$/;
	my $xfilter  = $parameters[$header{"xfilter"}] if $header{"xfilter"} !~ /^\s*$/;

	#warn "Parameters: ", join("\t", @parameters), "\n";
	#warn "REPO NAME :    ghname $header{'ghname'} :: $ghname\n";
	#warn "REPO FIELD:    ghrepo $header{'ghrepo'} :: $ghrepo\n";
	#warn "FILTER FIELD:  to     $header{'sar'} :: $sar\n";
	#warn "FROM FIELD:    from   $header{'from'} :: $prefix\n";
	#warn "TO   FIELD:    to     $header{'to'} ::$suffix\n";
	#warn "FILTER FIELD:  filter $header{'filter'} ::$filter\n";
	#warn "FXILTER FIELD: xfilter $header{'xfilter'} ::$xfilter\n";

	# Remove null tokens:
	$ghname    = "" if $ghname    eq ".";
	$ghrepo    = "" if $ghrepo    eq ".";
	$from      = "" if $from      eq ".";
	$to        = "" if $to        eq ".";
	$prefix    = "" if $prefix    eq ".";
	$suffix    = "" if $suffix    eq ".";
	$sar       = "" if $sar       eq ".";
	$filter    = "" if $filter    eq ".";
	$xfilter   = "" if $xfilter   eq ".";

	if ($ghname eq "" or $ghrepo eq "") {
		my $xline = $line;
		$xline =~ s/\t+/\t/g;
		warn "ERROR PARSING LINE: $xline\n";
		warn "\t**ghname field is empty.\n" if $ghname eq "";
		warn "\t**ghrepo field is empty.\n" if $ghrepo eq "";
		next;
	}

	my $prefixOption  = "";
	my $suffixOption  = "";
	my $sarOption     = "";
	my $filterOption  = "";
	my $xfilterOption = "";

	if ($prefix)  { $prefixOption  = " --prefix \'"  . $prefix  . "\' "; }
	if ($suffix)  { $suffixOption  = " --suffix \'"  . $suffix  . "\' "; }
	if ($sar)     { $sarOption     = " --sar \'"     . $sar     . "\' "; }
	if ($filter)  { $filterOption  = " --filter \'"  . $filter  . "\' "; }
	if ($xfilter) { $xfilterOption = " --xfilter \'" . $xfilter . "\' "; }

	my $command = "bin/getRepositoryDirectory --github \"$ghname/$ghrepo\" --from \"$from\" --to \"$to\"";
	$command .= $prefixOption;
	$command .= $suffixOption;
	$command .= $sarOption;
	$command .= $filterOption;
	$command .= $xfilterOption;
	$command =~ s/  */ /g;
	# warn "##################################################################\n";
	warn "$command\n";
	`$command`;
}



