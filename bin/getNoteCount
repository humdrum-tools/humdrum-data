#!/usr/bin/env perl
#
# Programmer:    Craig Stuart Sapp <craig.stanford.edu>
# Creation Date: Sat Feb 17 20:17:18 PST 2024
# Last Modified: Sat Feb 17 20:17:24 PST 2024
# Filename:      bin/getNoteCount
# Syntax:        perl 5
#
# Description:   List note counts by subdirectory.
#

use strict;
use Getopt::Long;

my $dhideQ = 0;
my $fhideQ = 0;
my $nhideQ = 0;
my $totalQ = 0;

Getopt::Long::Configure("bundling");
GetOptions (
   "F|no-directory-names" => \$dhideQ,
   "C|no-file-count"      => \$fhideQ,
   "N|no-note-count"      => \$nhideQ,
	"t|total"              => \$totalQ
);

my $notecount = `which notecount`;
chomp $notecount;
die "Install Humdrum Extras for notecount command\n" if $notecount =~ /^s\*$/;

my $noteCount = 0;
my $fileCount = 0;
my ($noteCount, $fileCount) = countNotes(".", $noteCount, $fileCount);

print "Total notes: $noteCount \tFile count: $fileCount\n";


exit(0);

###########################################################################


##############################
##
## printInfo -- print note, file, and directory information
##

sub printInfo {
	my ($ncount, $fcount, $dir, $tQ) = @_;
	return if $totalQ && !$tQ;

	my $counter = 0;
	if (!$nhideQ) {
		print $ncount;
		$counter++;
	}

	if (!$fhideQ) {
		print "\t" if $counter > 0;
		print $fcount;
		$counter++;
	}

	if (!$dhideQ) {
		$dir =~ s/^\.\///;
		print "\t" if $counter > 0;
		if ($tQ) {
			print "TOTAL";
		} else {
			print $dir;
		}
		$counter++;
	}

	print "\n";
}



##############################
##
## countNotes
##

sub countNotes {
	my ($dir, $ncount, $fcount) = @_;
	my @files = getFiles($dir);

	my $nsum = 0;
	my $fsum = 0;

	for (my $i=0; $i<@files; $i++) {
		my $file = $files[$i];
		print "NONKERN: $dir/$file\n" if $file !~  /\.krn$/;
		next if $file !~ /\.krn$/;
		my $command = "$notecount -s \"$dir/$file\" | cut -f 1";
		my $result = "";
		open my $pipe, "$command 2>&1 |" or die "Failed: $!\n";
		while (<$pipe>) {
			$result .= $_;
		}
		close $pipe;
		chomp $result;
		if ($result =~ /^\s*$/) {
			print "PROBLEM:\t$dir/$file\n";
			next;
		}
		if ($result !~ /^\d+$/) {
			print "PROBLEM:\t$dir/$file\n";
			next;
		}
		$nsum += $result;
		$fsum++;
	}

	if ($fsum > 0) {
		printInfo($nsum, $fsum, $dir, 0);
	}

	$ncount += $nsum;
	$fcount += $fsum;

	my @dirs = getDirectories("$dir");

	for (my $i=0; $i<@dirs; $i++) {
		my $subdir = $dirs[$i];
		($ncount, $fcount) = countNotes("$dir/$subdir", $ncount, $fcount);
	}

	return ($ncount, $fcount);
}



##############################
##
## getDirectories --
##

sub getDirectories {
	my ($dir) = @_;
	opendir(DIR, $dir) or die "Cannot open directory $dir\n";
	my @output;
	while (my $file = readdir(DIR)) {
		next if $file =~ /^\./;
		next if !-d "$dir/$file";
		$output[@output] = $file;
	}
	return sort @output;
}



##############################
##
## getFiles --
##

sub getFiles {
	my ($dir) = @_;
	opendir(DIR, $dir) or die "Cannot open directory $dir\n";
	my @output;
	while (my $file = readdir(DIR)) {
		next if $file =~ /^\./;
		next if $file !~ /\.krn$/;
		next if -d "$dir/$file";
		next if -l "$dir/$file";
		$output[@output] = $file;
	}
	return sort @output;
}





